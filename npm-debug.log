0 info it worked if it ends with ok
1 verbose cli [ '/usr/local/Cellar/node4-lts/4.4.7/bin/node',
1 verbose cli   '/usr/local/bin/npm',
1 verbose cli   'publish' ]
2 info using npm@2.15.8
3 info using node@v4.4.7
4 verbose publish [ '.' ]
5 silly cache add args [ '.', null ]
6 verbose cache add spec .
7 silly cache add parsed spec Result {
7 silly cache add   raw: '.',
7 silly cache add   scope: null,
7 silly cache add   name: null,
7 silly cache add   rawSpec: '.',
7 silly cache add   spec: '/Users/kelvin.liu/Code/metaframe/zerorpc-node',
7 silly cache add   type: 'directory' }
8 verbose addLocalDirectory /Users/kelvin.liu/.npm/zerorpc/0.9.6/package.tgz not in flight; packing
9 verbose correctMkdir /Users/kelvin.liu/.npm correctMkdir not in flight; initializing
10 verbose tar pack [ '/Users/kelvin.liu/.npm/zerorpc/0.9.6/package.tgz',
10 verbose tar pack   '/Users/kelvin.liu/Code/metaframe/zerorpc-node' ]
11 verbose tarball /Users/kelvin.liu/.npm/zerorpc/0.9.6/package.tgz
12 verbose folder /Users/kelvin.liu/Code/metaframe/zerorpc-node
13 info prepublish zerorpc@0.9.6
14 verbose addLocalTarball adding from inside cache /Users/kelvin.liu/.npm/zerorpc/0.9.6/package.tgz
15 verbose correctMkdir /Users/kelvin.liu/.npm correctMkdir not in flight; initializing
16 silly cache afterAdd zerorpc@0.9.6
17 verbose afterAdd /Users/kelvin.liu/.npm/zerorpc/0.9.6/package/package.json not in flight; writing
18 verbose correctMkdir /Users/kelvin.liu/.npm correctMkdir not in flight; initializing
19 verbose afterAdd /Users/kelvin.liu/.npm/zerorpc/0.9.6/package/package.json written
20 silly publish { name: 'zerorpc',
20 silly publish   version: '0.9.6',
20 silly publish   main: './index.js',
20 silly publish   author:
20 silly publish    { name: 'Fran√ßois-Xavier Bourlet',
20 silly publish      email: 'bombela+zerorpc@gmail.com' },
20 silly publish   description: 'A port of ZeroRPC to node.js',
20 silly publish   contributors:
20 silly publish    [ { name: 'Francois-Xavier Bourlet', email: 'bombela@gmail.com' },
20 silly publish      { name: 'Yusuf Simonson', email: 'simonson@gmail.com' } ],
20 silly publish   scripts: { test: 'nodeunit test' },
20 silly publish   repository:
20 silly publish    { type: 'git',
20 silly publish      url: 'git+https://github.com/0rpc/zerorpc-node.git' },
20 silly publish   keywords: [ 'zerorpc', 'rpc', 'distributed', 'communication' ],
20 silly publish   dependencies:
20 silly publish    { underscore: '1.3.3',
20 silly publish      msgpack: '1.0.2',
20 silly publish      'node-uuid': '1.4.7',
20 silly publish      zmq: '2.x' },
20 silly publish   devDependencies: { nodeunit: '0.9.1', temp: '0.8.1' },
20 silly publish   license: 'MIT',
20 silly publish   readme: 'zerorpc-node\n============\n\n[![Build Status](https://travis-ci.org/0rpc/zerorpc-node.svg?branch=master)](https://travis-ci.org/0rpc/zerorpc-node)\n\nZeroRPC is a communication layer for distributed systems. zerorpc-node is a port of the original [ZeroRPC](https://github.com/0rpc/zerorpc-python) for node.js. We have full client and server support for version 3 of the protocol, and clients/servers written in the Python version can communicate transparently with those written in node.js. This project is in alpha.\n\nTo install the package:\n\nMake sure you have [ZeroMQ](https://github.com/zeromq/libzmq) installed.\n\nThen:\n\n    npm install zerorpc\n\nIf you get the error `Package libzmq was not found` after making sure ZeroMQ is installed, take a look at [the fix for zeromq.node](https://github.com/JustinTulloss/zeromq.node/issues/55). If you get the error `Unable to load shared library <<path to zeromq.node>>/binding.node`, [make sure you run ldconfig](https://github.com/JustinTulloss/zeromq.node/issues/85). If that still doesn\'t work, check out [this ticket](https://github.com/JustinTulloss/zeromq.node/issues/92).\n\nServers\n-------\n\nTo create a new server:\n\n    var zerorpc = require("zerorpc");\n    var server = new zerorpc.Server(context [, heartbeat]);\n\nThe constructor takes in a context object with the functions to expose\nover RPC. Only functions that do not have a leading underscore will be\nexposed. Each exposed method must take in a callback as the last\nargument. This callback is called as `callback(error, response, more)`\nwhen there is a new update, where error is an error object or string,\nresponse is the new update, and more is a boolean specifying whether new\nupdates will be available later. `error`, `response`, and `more` default\nto falsy values, so e.g. simply calling `callback()` closes an open\nstream, since `more` is false by default. Constructor also takes a\nheartbeat parameter that specifies the interval that the server should\nping clinets to let them know it is active.\n\nEvents:\n\n* `error` - When an error occurs.\n\nMethods:\n\n* `bind(endpoint)` - Binds the server to the specified ZeroMQ endpoint.\n* `connect(endpoint)` - Connects the server to the specified ZeroMQ endpoint.\n* `close()` - Closes the ZeroMQ socket.\n\nFull example:\n\n    var zerorpc = require("zerorpc");\n\n    var server = new zerorpc.Server({\n        addMan: function(sentence, reply) {\n            reply(null, sentence + ", man!");\n        },\n\n        add42: function(n, reply) {\n            reply(null, n + 42);\n        },\n\n        iter: function(from, to, step, reply) {\n            for(i=from; i<to; i+=step) {\n                reply(null, i, true);\n            }\n\n            reply();\n        }\n    });\n\n    server.bind("tcp://0.0.0.0:4242");\n\n    server.on("error", function(error) {\n        console.error("RPC server error:", error);\n    });\n\nClients\n-------\n\nTo create a new client:\n\n    var zerorpc = require("zerorpc");\n    var client = new zerorpc.Client(options);\n\nThe constructor optionally takes in an options object. Allowable options:\n\n* `timeout` (number) - Sets the number of seconds to wait for a response before considering the call timed out. Defaults to 30.\n* `heartbeatInterval` (number) - Sets the number of miliseconds to send send heartbeats to connected servers. Defaults to 5000ms.\n\nEvents:\n\n* `error` - When an error occurs.\n\nMethods:\n\n* `bind(endpoint)` - Binds the client to the specified ZeroMQ endpoint.\n* `connect(endpoint)` - Connects the client to the specified ZeroMQ endpoint.\n* `close()` - Closes the ZeroMQ socket.\n* `invoke(method, arguments..., callback)` - Invokes a remote method.\n  * `method` is the method name.\n  * `callback` is a method to call when there is an update. This callback is called as `callback(error, response, more)`, where error is an error object, response is the new update, and more is a boolean specifying whether new updates will be available later (i.e. whether the response is streaming).\n\nFull example:\n\n    var zerorpc = require("zerorpc");\n\n    var client = new zerorpc.Client();\n    client.connect("tcp://127.0.0.1:4242");\n\n    client.on("error", function(error) {\n        console.error("RPC client error:", error);\n    });\n\n    client.invoke("iter", 10, 20, 2, function(error, res, more) {\n        if(error) {\n            console.error(error);\n        } else {\n            console.log("UPDATE:", res);\n        }\n\n        if(!more) {\n            console.log("Done.");\n        }\n    });\n',
20 silly publish   readmeFilename: 'README.md',
20 silly publish   gitHead: 'b302ec8087ce2800f11fcbd09d752ee1d60fd828',
20 silly publish   bugs: { url: 'https://github.com/0rpc/zerorpc-node/issues' },
20 silly publish   homepage: 'https://github.com/0rpc/zerorpc-node#readme',
20 silly publish   _id: 'zerorpc@0.9.6',
20 silly publish   _shasum: 'b400063a99bb4a6d6d3acc764ba982258b56c6c2',
20 silly publish   _from: '.' }
21 verbose getPublishConfig undefined
22 silly mapToRegistry name zerorpc
23 silly mapToRegistry using default registry
24 silly mapToRegistry registry https://registry.npmjs.org/
25 silly mapToRegistry data Result {
25 silly mapToRegistry   raw: 'zerorpc',
25 silly mapToRegistry   scope: null,
25 silly mapToRegistry   name: 'zerorpc',
25 silly mapToRegistry   rawSpec: '',
25 silly mapToRegistry   spec: 'latest',
25 silly mapToRegistry   type: 'tag' }
26 silly mapToRegistry uri https://registry.npmjs.org/zerorpc
27 verbose publish registryBase https://registry.npmjs.org/
28 silly publish uploading /Users/kelvin.liu/.npm/zerorpc/0.9.6/package.tgz
29 verbose request uri https://registry.npmjs.org/zerorpc
30 verbose request sending authorization for write operation
31 info attempt registry request try #1 at 8:15:47 PM
32 verbose request using bearer token for auth
33 verbose request id 1642ea14ae647008
34 http request PUT https://registry.npmjs.org/zerorpc
35 http 403 https://registry.npmjs.org/zerorpc
36 verbose headers { 'content-type': 'application/json',
36 verbose headers   'cache-control': 'max-age=300',
36 verbose headers   'content-length': '101',
36 verbose headers   'accept-ranges': 'bytes',
36 verbose headers   date: 'Sat, 29 Oct 2016 09:15:48 GMT',
36 verbose headers   via: '1.1 varnish',
36 verbose headers   connection: 'keep-alive',
36 verbose headers   'x-served-by': 'cache-syd1626-SYD',
36 verbose headers   'x-cache': 'MISS',
36 verbose headers   'x-cache-hits': '0',
36 verbose headers   'x-timer': 'S1477732547.854513,VS0,VE868',
36 verbose headers   vary: 'Accept-Encoding' }
37 verbose request invalidating /Users/kelvin.liu/.npm/registry.npmjs.org/zerorpc on PUT
38 error publish Failed PUT 403
39 verbose stack Error: you do not have permission to publish "zerorpc". Are you logged in as the correct user? : zerorpc
39 verbose stack     at makeError (/usr/local/lib/node_modules/npm/node_modules/npm-registry-client/lib/request.js:264:12)
39 verbose stack     at CachingRegistryClient.<anonymous> (/usr/local/lib/node_modules/npm/node_modules/npm-registry-client/lib/request.js:252:14)
39 verbose stack     at Request._callback (/usr/local/lib/node_modules/npm/node_modules/npm-registry-client/lib/request.js:172:14)
39 verbose stack     at Request.self.callback (/usr/local/lib/node_modules/npm/node_modules/request/request.js:200:22)
39 verbose stack     at emitTwo (events.js:87:13)
39 verbose stack     at Request.emit (events.js:172:7)
39 verbose stack     at Request.<anonymous> (/usr/local/lib/node_modules/npm/node_modules/request/request.js:1067:10)
39 verbose stack     at emitOne (events.js:82:20)
39 verbose stack     at Request.emit (events.js:169:7)
39 verbose stack     at IncomingMessage.<anonymous> (/usr/local/lib/node_modules/npm/node_modules/request/request.js:988:12)
40 verbose statusCode 403
41 verbose pkgid zerorpc
42 verbose cwd /Users/kelvin.liu/Code/metaframe/zerorpc-node
43 error Darwin 16.1.0
44 error argv "/usr/local/Cellar/node4-lts/4.4.7/bin/node" "/usr/local/bin/npm" "publish"
45 error node v4.4.7
46 error npm  v2.15.8
47 error code E403
48 error you do not have permission to publish "zerorpc". Are you logged in as the correct user? : zerorpc
49 error If you need help, you may report this error at:
49 error     <https://github.com/npm/npm/issues>
50 verbose exit [ 1, true ]
